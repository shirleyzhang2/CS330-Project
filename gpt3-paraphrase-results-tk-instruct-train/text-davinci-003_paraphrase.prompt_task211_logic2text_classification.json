{
    "orignal_task": "task211_logic2text_classification.json",
    "engine": "text-davinci-003",
    "template": "paraphrase.prompt",
    "original_prompt": "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". \n Here are the definitions of logical operators: \n 1. count: returns the number of rows in the view. \n 2. only: returns whether there is exactly one row in the view. \n 3. hop: returns the value under the header column of the row. \n 4. and: returns the boolean operation result of two arguments. \n 5. max/min/avg/sum: returns the max/min/average/sum of the values under the header column. \n 6. nth_max/nth_min: returns the n-th max/n-th min of the values under the header column. \n 7. argmax/argmin: returns the row with the max/min value in header column. \n 8. nth_argmax/nth_argmin: returns the row with the n-th max/min value in header column. \n 9. eq/not_eq: returns if the two arguments are equal. \n 10. round_eq: returns if the two arguments are roughly equal under certain tolerance. \n 11. greater/less: returns if the first argument is greater/less than the second argument. \n 12. diff: returns the difference between two arguments. \n 13. filter_eq/ filter_not_eq: returns the subview whose values under the header column is equal/not equal to the third argument. \n 14. filter_greater/filter_less: returns the subview whose values under the header column is greater/less than the third argument. \n 15. filter_greater_eq /filter_less_eq: returns the subview whose values under the header column is greater/less or equal than the third argument. \n 16. filter_all: returns the view itself for the case of describing the whole table \n 17. all_eq/not_eq: returns whether all the values under the header column are equal/not equal to the third argument. \n 18. all_greater/less: returns whether all the values under the header column are greater/less than the third argument. \n 19. all_greater_eq/less_eq: returns whether all the values under the header column are greater/less or equal to the third argument. \n 20. most_eq/not_eq: returns whether most of the values under the header column are equal/not equal to the third argument. \n 21. most_greater/less: returns whether most of the values under the header column are greater/less than the third argument. \n 22. most_greater_eq/less_eq: returns whether most of the values under the header column are greater/less or equal to the third argument.",
    "generated_prompts": [
        "In this task, you are given commands (in terms of logical operations) and a natural interpretation of the command to select relevant rows from a table. You need to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". Here are the definitions of logical operators: count returns the number of rows in the view; only returns if there is exactly one row in the view; hop returns the value under the header column of the row; and returns the boolean operation result of two arguments; max/min/avg/sum returns the max/min/average/sum of the values under the header column; nth_max/nth_min returns the n-th max/n-th min of the values under the header column; argmax/argmin returns the row with the max/min value in header column; nth_argmax/nth_argmin returns the row with the n-th max/min value in header column; eq/not_eq returns if the two arguments are equal; round_eq returns if the two arguments are roughly equal under certain tolerance; greater/less returns if the first argument is greater/less than the second argument; diff returns the difference between two arguments; filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument; filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument; filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument; filter_all returns the view itself for the case of describing the whole table; all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument; all_greater/less returns whether all the values under the header column are greater/less than the third argument; all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument; most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument; most_greater/less returns whether most of the values under the header column are greater/less than the third argument; most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you will be given commands (in terms of logical operations) and a natural interpretation of the command to select relevant rows from a table. You must generate a label of 'yes' if the interpretation is appropriate for the command, otherwise generate a label of 'no'. Here are the definitions of the logical operators that may be used: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, most_greater_eq/less_eq.",
        "In this task, you are given a command (in terms of logical operations) and a natural interpretation of the command to select relevant rows from the table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". You will be given a definition of each of the 22 logical operators. Count returns the number of rows in the view. Only returns whether there is exactly one row in the view. Hop returns the value under the header column of the row. And returns the boolean operation result of two arguments. Max/min/avg/sum returns the max/min/average/sum of the values under the header column. Nth_max/nth_min returns the n-th max/n-th min of the values under the header column. Argmax/argmin returns the row with the max/min value in header column. Nth_argmax/nth_argmin returns the row with the n-th max/min value in header column. Eq/not_eq returns if the two arguments are equal. Round_eq returns if the two arguments are roughly equal under certain tolerance. Greater/less returns if the first argument is greater/less than the second argument. Diff returns the difference between two arguments. Filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument. Filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument. Filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument. Filter_all returns the view itself for the case of describing the whole table. All_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument. All_greater/less returns whether all the values under the header column are greater/less than the third argument. All_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument. Most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument. Most_greater/less returns whether most of the values under the header column are greater/less than the third argument. Most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you will be given commands (which are logical operations) and their natural interpretation to select relevant rows from a given table. Generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". Here are the definitions of the logical operators used: count returns the number of rows in the view; only returns whether there is exactly one row in the view; hop returns the value under the header column of the row; and returns the boolean operation result of two arguments; max/min/avg/sum returns the max/min/average/sum of the values under the header column; nth_max/nth_min returns the n-th max/n-th min of the values under the header column; argmax/argmin returns the row with the max/min value in header column; nth_argmax/nth_argmin returns the row with the n-th max/min value in header column; eq/not_eq returns if the two arguments are equal; round_eq returns if the two arguments are roughly equal under certain tolerance; greater/less returns if the first argument is greater/less than the second argument; diff returns the difference between two arguments; filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument; filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument; filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument; filter_all returns the view itself for the case of describing the whole table; all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument; all_greater/less returns whether all the values under the header column are greater/less than the third argument; all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument; most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument; most_greater/less returns whether most of the values under the header column are greater/less than the third argument; and most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you are given commands, expressed in terms of logical operations, and the natural interpretation of the command, which is to select relevant rows from the given table. Your job is to output a label of \"yes\" if the interpretation is appropriate for the command, or output a label of \"no\" otherwise. There are 22 definitions of logical operators, including count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label of \"yes\" if the interpretation is appropriate for the command, otherwise generate a label of \"no\". There are 22 logical operators defined as follows: count returns the number of rows in the view; only returns whether there is exactly one row in the view; hop returns the value under the header column of the row; and returns the boolean operation result of two arguments; max/min/avg/sum returns the max/min/average/sum of the values under the header column; nth_max/nth_min returns the n-th max/n-th min of the values under the header column; argmax/argmin returns the row with the max/min value in header column; nth_argmax/nth_argmin returns the row with the n-th max/min value in header column; eq/not_eq returns if the two arguments are equal; round_eq returns if the two arguments are roughly equal under certain tolerance; greater/less returns if the first argument is greater/less than the second argument; diff returns the difference between two arguments; filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument; filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument; filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument; filter_all returns the view itself for the case of describing the whole table; all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument; all_greater/less returns whether all the values under the header column are greater/less than the third argument; all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument; most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument; most_greater/less returns whether most of the values under the header column are greater/less than the third argument; most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you are given a command in terms of logical operations and a natural interpretation of the command to select relevant rows from a table. You need to generate a label \"yes\" if the interpretation is suitable for the command, otherwise generate a label \"no\". The definitions of the logical operators are: count (returns the number of rows in the view), only (returns whether there is exactly one row in the view), hop (returns the value under the header column of the row), and (returns the boolean operation result of two arguments), max/min/avg/sum (returns the max/min/average/sum of the values under the header column), nth_max/nth_min (returns the n-th max/n-th min of the values under the header column), argmax/argmin (returns the row with the max/min value in header column), nth_argmax/nth_argmin (returns the row with the n-th max/min value in header column), eq/not_eq (returns if the two arguments are equal), round_eq (returns if the two arguments are roughly equal under certain tolerance), greater/less (returns if the first argument is greater/less than the second argument), diff (returns the difference between two arguments), filter_eq/ filter_not_eq (returns the subview whose values under the header column is equal/not equal to the third argument), filter_greater/filter_less (returns the subview whose values under the header column is greater/less than the third argument), filter_greater_eq /filter_less_eq (returns the subview whose values under the header column is greater/less or equal than the third argument), filter_all (returns the view itself for the case of describing the whole table), all_eq/not_eq (returns whether all the values under the header column are equal/not equal to the third argument), all_greater/less (returns whether all the values under the header column are greater/less than the third argument), all_greater_eq/less_eq (returns whether all the values under the header column are greater/less or equal to the third argument), most_eq/not_eq (returns whether most of the values under the header column are equal/not equal to the third argument), most_greater/less (returns whether most of the values under the header column are greater/less than the third argument), most_greater_eq/less_eq (returns whether most of the values under the header column are greater/less or equal to the third argument).",
        "Given a table, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the table. You must generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The following are the definitions of the logical operators that you should consider: count returns the number of rows in the view, only returns whether there is exactly one row in the view, hop returns the value under the header column of the row, and returns the boolean operation result of two arguments, max/min/avg/sum returns the max/min/average/sum of the values under the header column, nth_max/nth_min returns the n-th max/n-th min of the values under the header column, argmax/argmin returns the row with the max/min value in header column, nth_argmax/nth_argmin returns the row with the n-th max/min value in header column, eq/not_eq returns if the two arguments are equal, round_eq returns if the two arguments are roughly equal under certain tolerance, greater/less returns if the first argument is greater/less than the second argument, diff returns the difference between two arguments, filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument, filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument, filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument, filter_all returns the view itself for the case of describing the whole table, all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument, all_greater/less returns whether all the values under the header column are greater/less than the third argument, all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument, most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument, most_greater/less returns whether most of the values under the header column are greater/less than the third argument, and most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you will be given commands (in terms of logical operations) and natural interpretation of the command to select relevant rows from the given table. You must generate a label \"yes\" if the interpretation is correct for the command, otherwise generate label \"no\". The definitions of the logical operators are as follows: count returns the number of rows in the view, only returns whether there is exactly one row in the view, hop returns the value under the header column of the row, and returns the boolean operation result of two arguments, max/min/avg/sum returns the max/min/average/sum of the values under the header column, nth_max/nth_min returns the n-th max/n-th min of the values under the header column, argmax/argmin returns the row with the max/min value in header column, nth_argmax/nth_argmin returns the row with the n-th max/min value in header column, eq/not_eq returns if the two arguments are equal, round_eq returns if the two arguments are roughly equal under certain tolerance, greater/less returns if the first argument is greater/less than the second argument, diff returns the difference between two arguments, filter_eq/filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument, filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument, filter_greater_eq/filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument, filter_all returns the view itself for the case of describing the whole table, all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument, all_greater/less returns whether all the values under the header column are greater/less than the third argument, all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument, most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument, most_greater/less returns whether most of the values under the header column are greater/less than the third argument, and most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you will be given commands in terms of logical operations and a natural interpretation of the command to select relevant rows from the given table. You must generate a label \"yes\" if the interpretation is appropriate for the command, and a label \"no\" otherwise. Here are the definitions of the logical operators you need to be aware of: count (returns the number of rows in the view), only (returns whether there is exactly one row in the view), hop (returns the value under the header column of the row), and (returns the boolean operation result of two arguments), max/min/avg/sum (returns the max/min/average/sum of the values under the header column), nth_max/nth_min (returns the n-th max/n-th min of the values under the header column), argmax/argmin (returns the row with the max/min value in header column), nth_argmax/nth_argmin (returns the row with the n-th max/min value in header column), eq/not_eq (returns if the two arguments are equal), round_eq (returns if the two arguments are roughly equal under certain tolerance), greater/less (returns if the first argument is greater/less than the second argument), diff (returns the difference between two arguments), filter_eq/ filter_not_eq (returns the subview whose values under the header column is equal/not equal to the third argument), filter_greater/filter_less (returns the subview whose values under the header column is greater/less than the third argument), filter_greater_eq /filter_less_eq (returns the subview whose values under the header column is greater/less or equal than the third argument), filter_all (returns the view itself for the case of describing the whole table), all_eq/not_eq (returns whether all the values under the header column are equal/not equal to the third argument), all_greater/less (returns whether all the values under the header column are greater/less than the third argument), all_greater_eq/less_eq (returns whether all the values under the header column are greater/less or equal to the third argument), most_eq/not_eq (returns whether most of the values under the header column are equal/not equal to the third argument), most_greater/less (returns whether most of the values under the header column are greater/less than the third argument), and most_greater_eq/less_eq (returns whether most of the values under the header column are greater/less or equal to the third argument).",
        "This task requires you to determine whether the natural interpretation of a given command is appropriate for the command itself. You will be given the definitions of the logical operators, such as count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\".",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The given commands include count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/ filter_not_eq, filter_greater/filter_less, filter_greater_eq /filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq. Your task is to return \"yes\" or \"no\" depending on whether the natural interpretation of the command is appropriate for the given command.",
        "This task requires you to generate a label \"yes\" if the interpretation of the given command is appropriate, and generate label \"no\" if it is not. You are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. There are 22 definitions of logical operators, which are count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/ filter_not_eq, filter_greater/filter_less, filter_greater_eq /filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and a natural interpretation of the command to select relevant rows from the given table. You need to output a label \"yes\" if the interpretation is appropriate for the command, otherwise output a label \"no\". There are 22 logical operators to consider, including \"count\", \"only\", \"hop\", \"and\", \"max/min/avg/sum\", \"nth_max/nth_min\", \"argmax/argmin\", \"nth_argmax/nth_argmin\", \"eq/not_eq\", \"round_eq\", \"greater/less\", \"diff\", \"filter_eq/filter_not_eq\", \"filter_greater/filter_less\", \"filter_greater_eq/filter_less_eq\", \"filter_all\", \"all_eq/not_eq\", \"all_greater/less\", \"all_greater_eq/less_eq\", \"most_eq/not_eq\", \"most_greater/less\", and \"most_greater_eq/less_eq\".",
        "In this task, you are given commands in terms of logical operations and a natural interpretation of the command to select relevant rows from the given table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". There are 22 logical operators to consider, including 'count', 'only', 'hop', 'and', 'max/min/avg/sum', 'nth_max/nth_min', 'argmax/argmin', 'nth_argmax/nth_argmin', 'eq/not_eq', 'round_eq', 'greater/less', 'diff', 'filter_eq/filter_not_eq', 'filter_greater/filter_less', 'filter_greater_eq/filter_less_eq', 'filter_all', 'all_eq/not_eq', 'all_greater/less', 'all_greater_eq/less_eq', 'most_eq/not_eq', 'most_greater/less', and 'most_greater_eq/less_eq'.",
        "In this task, you are provided with commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". Here are the definitions of the 22 logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/ filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label of \"yes\" or \"no\" depending on the appropriateness of the interpretation for the command. There are 22 definitions of logical operators, including count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "Given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table, output \"yes\" if the interpretation is appropriate for the command, or \"no\" if not. Here are the definitions of the 22 logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you will be given a command (in terms of logical operations) and a natural interpretation of the command. Your job is to decide if the interpretation is appropriate for the command. Output \"yes\" if the interpretation is appropriate, otherwise output \"no\". The command will use one of the following logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, most_greater_eq/less_eq.",
        "In this task, you are given a command (in terms of logical operations) and a natural interpretation of the command to select relevant rows from the given table. Output a label \"yes\" if the interpretation is appropriate for the command, otherwise output label \"no\". There are 22 types of logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/ filter_not_eq, filter_greater/filter_less, filter_greater_eq /filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you will be given commands (in terms of logical operations) and a natural interpretation of the command to select relevant rows from the given table. Your job is to determine if the interpretation is appropriate for the command, and generate a label \"yes\" if it is, otherwise generate a label \"no\". The commands are defined by 22 logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and a natural interpretation of the given command to select relevant rows from the given table. You need to generate a label of \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The given commands are defined as: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label of \"yes\" if the interpretation is suitable for the command, and \"no\" if the interpretation is not appropriate. There are 22 logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The commands are defined by a set of logical operators, such as count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/ filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, most_greater_eq/less_eq. Your task is to output \"yes\" if the interpretation is correct for the given command, or \"no\" if it is not.",
        "For this task, you will be given commands in terms of logical operations and natural interpretation of the given command to select relevant rows from the given table. Output \"yes\" if the interpretation is appropriate for the command, otherwise output \"no\". The definitions of the 22 logical operators are as follows: count (returns the number of rows in the view), only (returns whether there is exactly one row in the view), hop (returns the value under the header column of the row), and (returns the boolean operation result of two arguments), max/min/avg/sum (returns the max/min/average/sum of the values under the header column), nth_max/nth_min (returns the n-th max/n-th min of the values under the header column), argmax/argmin (returns the row with the max/min value in header column), nth_argmax/nth_argmin (returns the row with the n-th max/min value in header column), eq/not_eq (returns if the two arguments are equal), round_eq (returns if the two arguments are roughly equal under certain tolerance), greater/less (returns if the first argument is greater/less than the second argument), diff (returns the difference between two arguments), filter_eq/ filter_not_eq (returns the subview whose values under the header column is equal/not equal to the third argument), filter_greater/filter_less (returns the subview whose values under the header column is greater/less than the third argument), filter_greater_eq /filter_less_eq (returns the subview whose values under the header column is greater/less or equal than the third argument), filter_all (returns the view itself for the case of describing the whole table), all_eq/not_eq (returns whether all the values under the header column are equal/not equal to the third argument), all_greater/less (returns whether all the values under the header column are greater/less than the third argument), all_greater_eq/less_eq (returns whether all the values under the header column are greater/less or equal to the third argument), most_eq/not_eq (returns whether most of the values under the header column are equal/not equal to the third argument), most_greater/less (returns whether most of the values under the header column are greater/less than the third argument), and most_greater_eq/less_eq (returns whether most of the values under the header column are greater/less or equal to the third argument).",
        "For this task, you are given a table with commands (in terms of logical operations) and a natural interpretation of the given command. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". There are 22 types of logical operators: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq. Your output should be either \"yes\" or \"no\" depending on the interpretation of the command.",
        "In this task, you will be given commands expressed in terms of logical operations and natural interpretation of the given command, which are used to select relevant rows from the given table. You need to generate a label of either \"yes\" or \"no\" depending on whether the interpretation is appropriate for the command. Definitions of the logical operators are as follows: count returns the number of rows in the view, only returns whether there is exactly one row in the view, hop returns the value under the header column of the row, and returns the boolean operation result of two arguments, max/min/avg/sum returns the max/min/average/sum of the values under the header column, nth_max/nth_min returns the n-th max/n-th min of the values under the header column, argmax/argmin returns the row with the max/min value in header column, nth_argmax/nth_argmin returns the row with the n-th max/min value in header column, eq/not_eq returns if the two arguments are equal, round_eq returns if the two arguments are roughly equal under certain tolerance, greater/less returns if the first argument is greater/less than the second argument, diff returns the difference between two arguments, filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument, filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument, filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument, filter_all returns the view itself for the case of describing the whole table, all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument, all_greater/less returns whether all the values under the header column are greater/less than the third argument, all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument, most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument, most_greater/less returns whether most of the values under the header column are greater/less than the third argument, and most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you are given a table and a command, which is in terms of logical operations. You are also given a natural interpretation of the command to select relevant rows from the table. Your job is to decide whether the interpretation is appropriate for the command and generate a label \"yes\" if it is, otherwise generate label \"no\". There are 22 definitions of logical operators that you need to be aware of. These are: count, only, hop, and, max/min/avg/sum, nth_max/nth_min, argmax/argmin, nth_argmax/nth_argmin, eq/not_eq, round_eq, greater/less, diff, filter_eq/filter_not_eq, filter_greater/filter_less, filter_greater_eq/filter_less_eq, filter_all, all_eq/not_eq, all_greater/less, all_greater_eq/less_eq, most_eq/not_eq, most_greater/less, and most_greater_eq/less_eq.",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. You must generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The definitions of the logical operators used are: count (returns the number of rows in the view), only (returns whether there is exactly one row in the view), hop (returns the value under the header column of the row), and (returns the boolean operation result of two arguments), max/min/avg/sum (returns the max/min/average/sum of the values under the header column), nth_max/nth_min (returns the n-th max/n-th min of the values under the header column), argmax/argmin (returns the row with the max/min value in header column), nth_argmax/nth_argmin (returns the row with the n-th max/min value in header column), eq/not_eq (returns if the two arguments are equal), round_eq (returns if the two arguments are roughly equal under certain tolerance), greater/less (returns if the first argument is greater/less than the second argument), diff (returns the difference between two arguments), filter_eq/ filter_not_eq (returns the subview whose values under the header column is equal/not equal to the third argument), filter_greater/filter_less (returns the subview whose values under the header column is greater/less than the third argument), filter_greater_eq /filter_less_eq (returns the subview whose values under the header column is greater/less or equal than the third argument), filter_all (returns the view itself for the case of describing the whole table), all_eq/not_eq (returns whether all the values under the header column are equal/not equal to the third argument), all_greater/less (returns whether all the values under the header column are greater/less than the third argument), all_greater_eq/less_eq (returns whether all the values under the header column are greater/less or equal to the third argument), most_eq/not_eq (returns whether most of the values under the header column are equal/not equal to the third argument), most_greater/less (returns whether most of the values under the header column are greater/less than the third argument), and most_greater_eq/less_eq (returns whether most of the values under the header column are greater/less or equal to the third argument).",
        "For this task, you will be given commands (in terms of logical operations) and natural interpretations of the commands, with the goal of selecting relevant rows from the given table. Your job is to generate a label of \"yes\" if the interpretation is appropriate for the command, otherwise generate a label of \"no\". The definitions of the logical operators are as follows: count returns the number of rows in the view, only returns whether there is exactly one row in the view, hop returns the value under the header column of the row, and returns the boolean operation result of two arguments, max/min/avg/sum returns the max/min/average/sum of the values under the header column, nth_max/nth_min returns the n-th max/n-th min of the values under the header column, argmax/argmin returns the row with the max/min value in header column, nth_argmax/nth_argmin returns the row with the n-th max/min value in header column, eq/not_eq returns if the two arguments are equal, round_eq returns if the two arguments are roughly equal under certain tolerance, greater/less returns if the first argument is greater/less than the second argument, diff returns the difference between two arguments, filter_eq/ filter_not_eq returns the subview whose values under the header column is equal/not equal to the third argument, filter_greater/filter_less returns the subview whose values under the header column is greater/less than the third argument, filter_greater_eq /filter_less_eq returns the subview whose values under the header column is greater/less or equal than the third argument, filter_all returns the view itself for the case of describing the whole table, all_eq/not_eq returns whether all the values under the header column are equal/not equal to the third argument, all_greater/less returns whether all the values under the header column are greater/less than the third argument, all_greater_eq/less_eq returns whether all the values under the header column are greater/less or equal to the third argument, most_eq/not_eq returns whether most of the values under the header column are equal/not equal to the third argument, most_greater/less returns whether most of the values under the header column are greater/less than the third argument, and most_greater_eq/less_eq returns whether most of the values under the header column are greater/less or equal to the third argument.",
        "In this task, you are given commands (in terms of logical operations) and natural interpretation of the given command to select relevant rows from the given table. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The commands are one of the following logical operations: count, only, hop, and, max, min, avg, sum, nth_max, nth_min, argmax, argmin, nth_argmax, nth_argmin, eq, not_eq, round_eq, greater, less, diff, filter_eq, filter_not_eq, filter_greater, filter_less, filter_greater_eq, filter_less_eq, filter_all, all_eq, not_eq, all_greater, less, all_greater_eq, less_eq, most_eq, not_eq, most_greater, less, and most_greater_eq, less_eq. For each given command and natural interpretation, you need to output \"yes\" if it is appropriate for the command, or \"no\" otherwise.",
        "In this task, you are given commands (using logical operations) and a natural interpretation of the command that can be used to select relevant rows from a given table. You need to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise output label \"no\". Here is a list of the logical operators and what they do: count (returns the number of rows in the view), only (returns whether there is exactly one row in the view), hop (returns the value under the header column of the row), and (returns the boolean operation result of two arguments), max/min/avg/sum (returns the max/min/average/sum of the values under the header column), nth_max/nth_min (returns the n-th max/n-th min of the values under the header column), argmax/argmin (returns the row with the max/min value in header column), nth_argmax/nth_argmin (returns the row with the n-th max/min value in header column), eq/not_eq (returns if the two arguments are equal), round_eq (returns if the two arguments are roughly equal under certain tolerance), greater/less (returns if the first argument is greater/less than the second argument), diff (returns the difference between two arguments), filter_eq/ filter_not_eq (returns the subview whose values under the header column is equal/not equal to the third argument), filter_greater/filter_less (returns the subview whose values under the header column is greater/less than the third argument), filter_greater_eq/filter_less_eq (returns the subview whose values under the header column is greater/less or equal than the third argument), filter_all (returns the view itself for the case of describing the whole table), all_eq/not_eq (returns whether all the values under the header column are equal/not equal to the third argument), all_greater/less (returns whether all the values under the header column are greater/less than the third argument), all_greater_eq/less_eq (returns whether all the values under the header column are greater/less or equal to the third argument), most_eq/not_eq (returns whether most of the values under the header column are equal/not equal to the third argument), most_greater/less (returns whether most of the values under the header column are greater/less than the third argument), and most_greater_eq/less_eq (returns whether most of the values under the header column are greater/less or equal to the third argument)."
    ]
}