{
    "Contributors": [
        "Mihir Parmar"
    ],
    "Source": [
        "logic2text"
    ],
    "URL": [
        "https://github.com/czyssrs/Logic2Text"
    ],
    "Categories": [
        "Text to Code"
    ],
    "Reasoning": [
        "Logical Reasoning"
    ],
    "Definition": [
        "In this task, you are given a command in terms of logical operations, and you must classify the command into one of seven categories: majority, unique, superlative, count, comparative, aggregation, or ordinal. The definitions of each category are as follows: 1. majority: Describing the majority values (most or all) over one column, with the scope of all table rows or a subset of rows 2. unique: Describing one unique row, regarding one column, with the scope of all table rows or a subset of rows 3. Superlative: Describing the maximum or minimum value in a column, with the scope of all table rows or a subset of rows 4. Ordinal: Describing the n-th maximum or minimum value in a column, with the scope of all table rows or a subset of rows 5. Comparative: Comparing two rows in the table, regarding their values in one column 6. Count: counting some rows in the table based on the values in one column, with the scope of all table rows or a subset of rows 7. Aggregation: Describing the sum or average value over a column, with the scope of all table rows or a subset of rows. The logical operators for understanding the command are as follows: 1. count: returns the number of rows in the view. 2. only: returns whether there is exactly one row in the view. 3. hop: returns the value under the header column of the row. 4. and: returns the boolean operation result of two arguments. 5. max/min/avg/sum: returns the max/min/average/sum of the values under the header column. 6. nth_max/nth_min: returns the n-th max/n-th min of the values under the header column. 7. argmax/argmin: returns the row with the max/min value in header column. 8. nth_argmax/nth_argmin: returns the row with the n-th max/min value in header column. 9. eq/not_eq: returns if the two arguments are equal. 10. round_eq: returns if the two arguments are roughly equal under certain tolerance. 11. greater/less: returns if the first argument is greater/less than the second argument. 12. diff: returns the difference between two arguments. 13. filter_eq/ filter_not_eq: returns the subview whose values under the header column is equal/not equal to the third argument. 14. filter_greater/filter_less: returns the subview whose values under the header column is greater/less than the third argument. 15. filter_greater_eq /filter_less_eq: returns the subview whose values under the header column is greater/less or equal than the third argument. 16. filter_all: returns the view itself for the case of describing the whole table 17. all_eq/not_eq: returns whether all the values under the header column are equal/not equal to the third argument. 18. all_greater/less: returns whether all the values under the header column are greater/less than the third argument. 19. all_greater_eq/less_eq: returns whether all the values under the header column are greater/less or equal to the third argument. 20. most_eq/not_eq: returns whether most of the values under the header column are equal/not equal to the third argument. 21. most_greater/less: returns whether most of the values under the header column are greater/less than the third argument. 22. most_greater_eq/less_eq: returns whether most of the values under the header column are greater/less or equal to the third argument."
    ],
    "Input_language": [
        "English"
    ],
    "Output_language": [
        "English"
    ],
    "Instruction_language": [
        "English"
    ],
    "Domains": [
        "Wikipedia",
        "Logic -> Propositional Logic"
    ],
    "Positive Examples": [
        {
            "input": "round_eq { sum { all_rows ; casinos } ; 217 }",
            "output": "aggregation",
            "explanation": "In this example sum returns the sum of the values in all of the casinos rows. Hence, aggregation is right category."
        },
        {
            "input": "eq { count { filter_eq { all_rows ; island ; hawaii } } ; 2 }",
            "output": "count",
            "explanation": "The count command counts the the island is hawaii, hence, the category is count."
        },
        {
            "input": "most_eq { filter_eq { all_rows ; team ; aston martin racing } ; class pos ; dnf }",
            "output": "majority",
            "explanation": "Here, most_eq in the command indicates that some majority rows need to be selected, hence, the categpory is majorioty."
        }
    ],
    "Negative Examples": [
        {
            "input": "most_greater_eq { all_rows ; us viewers ( million ) ; 1.0 }",
            "output": "count",
            "explanation": "The most_greater_eq command indicates that we need to select some majority rows, but label is 'count' which is not right."
        },
        {
            "input": "less { hop { filter_eq { all_rows ; host team ; san diego chargers } ; final score } ; hop { filter_eq { all_rows ; host team ; philadelphia eagles } ; final score } }",
            "output": "ordinal",
            "explanation": "The less command indicates the comparision between rows, hence, 'comparative' category is right, but the label is 'ordinal' which is wrong."
        }
    ],
    "Instances": [
        {
            "id": "task212-52ed4393fabf42368c07b8d7c9a93d9d",
            "input": "and { only { filter_eq { filter_eq { all_rows ; captain ; a simpson } ; chairman ; j magowan } } ; eq { hop { filter_eq { filter_eq { all_rows ; captain ; a simpson } ; chairman ; j magowan } ; year } ; 2007 } }",
            "output": [
                "unique"
            ]
        },
        {
            "id": "task212-64662b1da71145798b5c37e63b3740c6",
            "input": "and { less { hop { filter_eq { all_rows ; player ; dwight lewis } ; round } ; hop { filter_eq { all_rows ; player ; doug hogan } ; round } } ; and { eq { hop { filter_eq { all_rows ; player ; dwight lewis } ; round } ; 10 } ; eq { hop { filter_eq { all_rows ; player ; doug hogan } ; round } ; 16 } } }",
            "output": [
                "comparative"
            ]
        },
        {
            "id": "task212-130a1637922c4617bdf777d04b35d7e8",
            "input": "round_eq { avg { all_rows ; rebounds } ; 269 }",
            "output": [
                "aggregation"
            ]
        },
        {
            "id": "task212-5f1bdb3304924a9b9eba631406c6a72a",
            "input": "eq { count { filter_all { all_rows ; official name } } ; 9 }",
            "output": [
                "count"
            ]
        },
        {
            "id": "task212-c7d8902981c64e9dbd7a7e6ddc8f5211",
            "input": "round_eq { sum { filter_greater_eq { all_rows ; week ; 13 } ; attendance } ; 95,901 }",
            "output": [
                "aggregation"
            ]
        },
        {
            "id": "task212-3a225db43f674349a20dcaa919869f28",
            "input": "round_eq { avg { all_rows ; crowd } ; 17750 }",
            "output": [
                "aggregation"
            ]
        },
        {
            "id": "task212-d719a401ff79496eb6849aa208e4a028",
            "input": "round_eq { sum { filter_less_eq { all_rows ; date ; february 5 } ; attendance } ; 37097 }",
            "output": [
                "aggregation"
            ]
        },
        {
            "id": "task212-c55f24b8eef74dc3b7d75b956bae93cd",
            "input": "most_eq { all_rows ; shirt sponsor ; turkcell }",
            "output": [
                "majority"
            ]
        }
    ],
    "Instance License": [
        "MIT"
    ]
}