{
    "Contributors": [
        "Mihir Parmar"
    ],
    "Source": [
        "logic2text"
    ],
    "URL": [
        "https://github.com/czyssrs/Logic2Text"
    ],
    "Categories": [
        "Text to Code"
    ],
    "Reasoning": [
        "Logical Reasoning"
    ],
    "Definition": [
        "In this task, you are given commands in terms of logical operations and a natural interpretation of the given command. Your job is to generate a label \"yes\" if the interpretation is appropriate for the command, otherwise generate label \"no\". The logical operators are defined as follows: 1. count: returns the number of rows in the view. 2. only: returns whether there is exactly one row in the view. 3. hop: returns the value under the header column of the row. 4. and: returns the boolean operation result of two arguments. 5. max/min/avg/sum: returns the max/min/average/sum of the values under the header column. 6. nth_max/nth_min: returns the n-th max/n-th min of the values under the header column. 7. argmax/argmin: returns the row with the max/min value in header column. 8. nth_argmax/nth_argmin: returns the row with the n-th max/min value in header column. 9. eq/not_eq: returns if the two arguments are equal. 10. round_eq: returns if the two arguments are roughly equal under certain tolerance. 11. greater/less: returns if the first argument is greater/less than the second argument. 12. diff: returns the difference between two arguments. 13. filter_eq/ filter_not_eq: returns the subview whose values under the header column is equal/not equal to the third argument. 14. filter_greater/filter_less: returns the subview whose values under the header column is greater/less than the third argument. 15. filter_greater_eq /filter_less_eq: returns the subview whose values under the header column is greater/less or equal than the third argument. 16. filter_all: returns the view itself for the case of describing the whole table 17. all_eq/not_eq: returns whether all the values under the header column are equal/not equal to the third argument. 18. all_greater/less: returns whether all the values under the header column are greater/less than the third argument. 19. all_greater_eq/less_eq: returns whether all the values under the header column are greater/less or equal to the third argument. 20. most_eq/not_eq: returns whether most of the values under the header column are equal/not equal to the third argument. 21. most_greater/less: returns whether most of the values under the header column are greater/less than the third argument. 22. most_greater_eq/less_eq: returns whether most of the values under the header column are greater/less or equal to the third argument."
    ],
    "Input_language": [
        "English"
    ],
    "Output_language": [
        "English"
    ],
    "Instruction_language": [
        "English"
    ],
    "Domains": [
        "Wikipedia",
        "Logic -> Propositional Logic"
    ],
    "Positive Examples": [
        {
            "input": "Command: eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; competition } ; danish superliga 2005 - 06 }, interpretation: select the row whose attendance record of all rows is 3rd maximum. the competition record of this row is danish superliga 2005-06.",
            "output": "yes",
            "explanation": "Here, the command and interpretion given for the command is correct that 3rd maximum should be selected from given table rows. Hence, the label is 'yes'."
        },
        {
            "input": "Command: eq { hop { argmax { all_rows ; duration } ; actor } ; lesley saweard }, interpretation: select the row whose duration record of all rows is maximum. the actor record of this row is lesley saweard.",
            "output": "yes",
            "explanation": "Here, the command and interpretion given for the command is correct that the maximum duration should be selected from the given table rows. Hence, the label is 'yes'."
        },
        {
            "input": "Command: most_eq { all_rows ; points ; 0 }, interpretation: select the row whose duration record of all rows is maximum. the actor record of this row is lesley saweard.",
            "output": "no",
            "explanation": "Here, the command and interpretion given for the command is not correct because command indicates that the most of the point records are zero, however, interetation indicates that the maximum duration should be selected from the given table rows. Hence, the label is 'no'."
        },
        {
            "input": "Command: and { only { filter_eq { all_rows ; acquisition via ; rookie draft } } ; eq { hop { filter_eq { all_rows ; acquisition via ; rookie draft } ; name } ; reynel hugnatan } }, interpretation: select the row whose attendance record of all rows is 3rd maximum. the competition record of this row is danish superliga 2005-06.",
            "output": "no",
            "explanation": "Here, the command and interpretion given for the command is not correct because command selects only one row whose acquisition record fuzzily matches to rookie draft, however, interpretation indicates that 3rd maximum should be selected from given table rows. Hence, the label is 'no'."
        }
    ],
    "Negative Examples": [
        {
            "input": "Command: eq { hop { nth_argmax { all_rows ; attendance ; 3 } ; competition } ; danish superliga 2005 - 06 }, interpretation: select the row whose attendance record of all rows is 3rd maximum. the competition record of this row is danish superliga 2005-06.",
            "output": "no",
            "explanation": "Given command and corresponding natural language interpretation is right, still label is 'no'. It must be 'yes'."
        },
        {
            "input": "Command: eq { hop { nth_argmax { all_rows ; goal gain ; 3 } ; team } ; south china }, interpretation: select the rows whose name of county record fuzzily matches to veszpr\u00e9m. take the area (km square) record of this row. select the rows whose name of county record fuzzily matches to tolna.",
            "output": "yes",
            "explanation": "Given command and corresponding natural language interpretation is completely mis-matched, still label is 'yes'. It must be 'no'."
        }
    ],
    "Instances": [
        {
            "id": "task211-e99f03d844c1430685557b45aef7935a",
            "input": "Command: and { only { filter_greater { all_rows ; screens ; 100 } } ; eq { hop { filter_greater { all_rows ; screens ; 100 } ; territory } ; turkey } }, interpretation: select the rows whose screens record is greater than 100 . there is only one such row in the table . the territory record of this unqiue row is turkey .",
            "output": [
                "yes"
            ]
        },
        {
            "id": "task211-0400f260d1724a21905682e9c504c0e3",
            "input": "Command: eq { count { filter_eq { filter_eq { all_rows ; year ; 2013 } ; result ; won } } ; 3 }, interpretation: select the rows whose year record is equal to 2013 . among these rows , select the rows whose result record fuzzily matches to won . the number of such rows is 3 .",
            "output": [
                "yes"
            ]
        },
        {
            "id": "task211-b09e176b6efe46768422fa3c9a5652bc",
            "input": "Command: eq { count { filter_greater_eq { all_rows ; total ; 10 } } ; 3 }, interpretation: select the rows whose total record is greater than or equal to 10 . the number of such rows is 3 .",
            "output": [
                "yes"
            ]
        },
        {
            "id": "task211-d45863ea2947488ca4217488b0106b7d",
            "input": "Command: eq { hop { nth_argmax { all_rows ; first elected ; 2 } ; incumbent } ; louis capozzoli }, interpretation: for the league / division records of all rows , most of them fuzzily match to first division .",
            "output": [
                "no"
            ]
        },
        {
            "id": "task211-e35a276c0f6b442cb0435246d5641bf0",
            "input": "Command: eq { hop { nth_argmax { all_rows ; attendance ; 2 } ; date } ; october 7 }, interpretation: select the row whose attendance record of all rows is 2nd maximum . the date record of this row is october 7 .",
            "output": [
                "yes"
            ]
        },
        {
            "id": "task211-d4c2a29f1d014dffa5e878e082a5bfd3",
            "input": "Command: eq { hop { argmax { all_rows ; points } ; club } ; dowlais rfc }, interpretation: the 17th minimum year record of all rows is 2005 . the award record of the row with 17th minimum year record is london critics circle film awards . the nominated work record of the row with 17th minimum year record is maria full of grace .",
            "output": [
                "no"
            ]
        },
        {
            "id": "task211-a89c8296b0ba4a11a032567271c0c2ed",
            "input": "Command: and { only { filter_eq { all_rows ; performer 4 ; john bird } } ; eq { hop { filter_eq { all_rows ; performer 4 ; john bird } ; episode } ; 5 } }, interpretation: the maximum duration ( days ) record of all rows is 184.84 . the expedition record of the row with superlative duration ( days ) record is salyut 6 - eo - 4 .",
            "output": [
                "no"
            ]
        },
        {
            "id": "task211-a7c55968c5e245c29b2bc7a5f73f5749",
            "input": "Command: and { only { filter_eq { all_rows ; time / retired ; off course } } ; eq { hop { filter_eq { all_rows ; time / retired ; off course } ; driver } ; gast\u00f3n mazzacane } }, interpretation: select the rows whose time / retired record fuzzily matches to off course . there is only one such row in the table . the driver record of this unqiue row is gast\u00f3n mazzacane .",
            "output": [
                "yes"
            ]
        }
    ],
    "Instance License": [
        "MIT"
    ]
}